{"version":3,"sources":["Components/test2.jpg","Components/Header.js","Components/Footer.js","Components/About.js","Components/Resume.js","Components/Contact.js","queries.js","Components/Portfolio.js","App.js","config/ApolloClient.js","registerServiceWorker.js","index.js"],"names":["module","exports","Header","this","props","data","name","occupation","description","networks","social","map","network","key","href","url","className","id","title","Component","Footer","About","profilepic","image","bio","country","address","city","state","zip","email","resumeDownload","resumedownload","src","alt","target","rel","Resume","skillmessage","education","school","degree","graduated","work","company","years","skills","onClick","window","open","searchq","Contact","message","contactmessage","action","method","htmlFor","type","defaultValue","size","onChange","handleChange","cols","rows","GET_PINNED_REPOS","gql","Portfolio","useQuery","loading","pinnedItems","get","color","height","width","project","projectImage","App","foo","resumeData","ReactGA","initialize","pageview","location","pathname","$","ajax","dataType","cache","success","setState","bind","error","xhr","status","err","console","log","alert","getResumeData","main","resume","portfolio","httpLink","createHttpLink","uri","authLink","setContext","_","headers","authorization","process","client","ApolloClient","link","concat","InMemoryCache","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","Root","ReactDOM","render","document","getElementById","URL","origin","addEventListener","fetch","response","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.c718a7a2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/test2.ddc5748d.jpg\";","import React, { Component } from \"react\";\n\nclass Header extends Component {\n  render() {\n    if (this.props.data) {\n      var name = this.props.data.name;\n      var occupation = this.props.data.occupation;\n      var description = this.props.data.description;\n      var networks = this.props.data.social.map(function (network) {\n        return (\n          <li key={network.name}>\n            <a href={network.url}>\n              <i className={network.className}></i>\n            </a>\n          </li>\n        );\n      });\n    }\n\n    return (\n      <header id=\"home\">\n        <nav id=\"nav-wrap\">\n          <a className=\"mobile-btn\" href=\"#nav-wrap\" title=\"Show navigation\">\n            Show navigation\n          </a>\n          <a className=\"mobile-btn\" href=\"#home\" title=\"Hide navigation\">\n            Hide navigation\n          </a>\n\n          <ul id=\"nav\" className=\"nav\">\n            <li className=\"current\">\n              <a className=\"smoothscroll\" href=\"#home\">\n                Home\n              </a>\n            </li>\n            <li>\n              <a className=\"smoothscroll\" href=\"#about\">\n                About\n              </a>\n            </li>\n            <li>\n              <a className=\"smoothscroll\" href=\"#resume\">\n                Resume\n              </a>\n            </li>\n            <li>\n              <a className=\"smoothscroll\" href=\"#portfolio\">\n                Works\n              </a>\n            </li>\n            {/* <li>\n              <a className=\"smoothscroll\" href=\"#testimonials\">\n                Testimonials\n              </a>\n            </li> */}\n            <li>\n              <a className=\"smoothscroll\" href=\"#contact\">\n                Contact\n              </a>\n            </li>\n          </ul>\n        </nav>\n\n        <div className=\"row banner\">\n          <div className=\"banner-text\">\n            <h1 className=\"responsive-headline\">I'm {name}.</h1>\n            <h3>{`I'm a ${occupation}. ${description}.`}</h3>\n            <hr />\n            <ul className=\"social\">{networks}</ul>\n          </div>\n        </div>\n\n        <p className=\"scrolldown\">\n          <a className=\"smoothscroll\" href=\"#about\">\n            <i className=\"icon-down-circle\"></i>\n          </a>\n        </p>\n      </header>\n    );\n  }\n}\n\nexport default Header;\n","import React, { Component } from \"react\";\n\nclass Footer extends Component {\n  render() {\n    if (this.props.data) {\n      var networks = this.props.data.social.map(function (network) {\n        return (\n          <li key={network.name}>\n            <a href={network.url}>\n              <i className={network.className}></i>\n            </a>\n          </li>\n        );\n      });\n    }\n\n    return (\n      <footer>\n        <div className=\"row\">\n          <div className=\"twelve columns\">\n            <ul className=\"social-links\">{networks}</ul>\n\n            <ul className=\"copyright\">\n              <li>&copy; Copyright 2020 Bryan Martirez</li>\n            </ul>\n          </div>\n          <div id=\"go-top\">\n            <a className=\"smoothscroll\" title=\"Back to Top\" href=\"#home\">\n              <i className=\"icon-up-open\"></i>\n            </a>\n          </div>\n        </div>\n      </footer>\n    );\n  }\n}\n\nexport default Footer;\n","import React, { Component } from \"react\";\n\nclass About extends Component {\n  render() {\n    if (this.props.data) {\n      var name = this.props.data.name;\n      var profilepic = \"images/\" + this.props.data.image;\n      var bio = this.props.data.bio;\n      var country = this.props.data.address.country;\n      var city = this.props.data.address.city;\n      var state = this.props.data.address.state;\n      var zip = this.props.data.address.zip;\n      // var phone = this.props.data.phone;\n      var email = this.props.data.email;\n      var resumeDownload = this.props.data.resumedownload;\n    }\n\n    return (\n      <section id=\"about\">\n        <div className=\"row\">\n          <div className=\"three columns\">\n            <img\n              className=\"profile-pic\"\n              src={profilepic}\n              alt=\"Bryan Martirez Profile Pic\"\n            />\n          </div>\n          <div className=\"nine columns main-col\">\n            <h2>Hi, I'm Bryan. Nice to meet you.</h2>\n\n            <p>{bio}</p>\n            <div className=\"row\">\n              <div className=\"columns contact-details\">\n                <h2>Contact Details</h2>\n                <p className=\"address\">\n                  <span>{name}</span>\n                  <br />\n                  <span>\n                    {city} {state}, {zip}\n                    <br />\n                    {country}\n                  </span>\n                  {/* <br />\n                  <span>{phone}</span> */}\n                  <br />\n                  <span>{email}</span>\n                </p>\n              </div>\n              <div className=\"columns download\">\n                <p>\n                  <a\n                    href={resumeDownload}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                    className=\"button\"\n                  >\n                    <i className=\"fa fa-download\"></i>Download Resume\n                  </a>\n                </p>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default About;\n","import React, { Component } from \"react\";\n\nclass Resume extends Component {\n  render() {\n    if (this.props.data) {\n      var skillmessage = this.props.data.skillmessage;\n      var education = this.props.data.education.map(function (education) {\n        return (\n          <div key={education.school}>\n            <h3>{education.school}</h3>\n            <p className=\"info\">\n              {education.degree} <span>&bull;</span>\n              <em className=\"date\">{education.graduated}</em>\n            </p>\n            <p>{education.description}</p>\n          </div>\n        );\n      });\n      var work = this.props.data.work.map(function (work) {\n        return (\n          <div key={work.company}>\n            <h3>{work.company}</h3>\n            <p className=\"info\">\n              {work.title}\n              <span>&bull;</span> <em className=\"date\">{work.years}</em>\n            </p>\n            <p>{work.description}</p>\n          </div>\n        );\n      });\n      var skills = this.props.data.skills.map((skills) => {\n        return (\n          <li key={skills.name}>\n            <em\n              onClick={() =>\n                window.open(\n                  `https://www.google.com/search?q=${skills.searchq}`,\n                  \"_blank\"\n                )\n              }\n            >\n              {skills.name}\n            </em>\n          </li>\n        );\n      });\n    }\n\n    return (\n      <section id=\"resume\">\n        <div className=\"row education\">\n          <div className=\"three columns header-col\">\n            <h1>\n              <span>Education</span>\n            </h1>\n          </div>\n\n          <div className=\"nine columns main-col\">\n            <div className=\"row item\">\n              <div className=\"twelve columns\">{education}</div>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"row work\">\n          <div className=\"three columns header-col\">\n            <h1>\n              <span>Work</span>\n            </h1>\n          </div>\n\n          <div className=\"nine columns main-col\">{work}</div>\n        </div>\n\n        <div className=\"row skill\">\n          <div className=\"three columns header-col\">\n            <h1>\n              <span>Skills</span>\n            </h1>\n          </div>\n\n          <div className=\"nine columns main-col\">\n            <p>{skillmessage}</p>\n\n            <div className=\"bars\">\n              <ul className=\"skills\">{skills}</ul>\n            </div>\n          </div>\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default Resume;\n","import React, { Component } from \"react\";\n\nclass Contact extends Component {\n  render() {\n    if (this.props.data) {\n      var name = this.props.data.name;\n      var country = this.props.data.address.country;\n      var city = this.props.data.address.city;\n      var state = this.props.data.address.state;\n      var zip = this.props.data.address.zip;\n      // var phone = this.props.data.phone;\n      var email = this.props.data.email;\n      var message = this.props.data.contactmessage;\n    }\n\n    return (\n      <section id=\"contact\">\n        <div className=\"row section-head\">\n          <div className=\"two columns header-col\">\n            <h1>\n              <span>Get In Touch.</span>\n            </h1>\n          </div>\n\n          <div className=\"ten columns\">\n            <p className=\"lead\">{message}</p>\n          </div>\n        </div>\n\n        <div className=\"row\">\n          <div className=\"eight columns\">\n            <form action=\"\" method=\"post\" id=\"contactForm\" name=\"contactForm\">\n              <fieldset>\n                <div>\n                  <label htmlFor=\"contactName\">\n                    Name <span className=\"required\">*</span>\n                  </label>\n                  <input\n                    type=\"text\"\n                    defaultValue=\"\"\n                    size=\"35\"\n                    id=\"contactName\"\n                    name=\"contactName\"\n                    onChange={this.handleChange}\n                  />\n                </div>\n\n                <div>\n                  <label htmlFor=\"contactEmail\">\n                    Email <span className=\"required\">*</span>\n                  </label>\n                  <input\n                    type=\"text\"\n                    defaultValue=\"\"\n                    size=\"35\"\n                    id=\"contactEmail\"\n                    name=\"contactEmail\"\n                    onChange={this.handleChange}\n                  />\n                </div>\n\n                <div>\n                  <label htmlFor=\"contactSubject\">Subject</label>\n                  <input\n                    type=\"text\"\n                    defaultValue=\"\"\n                    size=\"35\"\n                    id=\"contactSubject\"\n                    name=\"contactSubject\"\n                    onChange={this.handleChange}\n                  />\n                </div>\n\n                <div>\n                  <label htmlFor=\"contactMessage\">\n                    Message <span className=\"required\">*</span>\n                  </label>\n                  <textarea\n                    cols=\"50\"\n                    rows=\"15\"\n                    id=\"contactMessage\"\n                    name=\"contactMessage\"\n                  ></textarea>\n                </div>\n\n                <div>\n                  <button className=\"submit\">Submit</button>\n                  <span id=\"image-loader\">\n                    <img alt=\"\" src=\"images/loader.gif\" />\n                  </span>\n                </div>\n              </fieldset>\n            </form>\n\n            <div id=\"message-warning\"> Error boy</div>\n            <div id=\"message-success\">\n              <i className=\"fa fa-check\"></i>Your message was sent, thank you!\n              <br />\n            </div>\n          </div>\n\n          <aside className=\"four columns footer-widgets\">\n            <div className=\"widget widget_contact\">\n              <h4>Address and Phone</h4>\n              <p className=\"address\">\n                {name}\n                <br />\n                {city}, {state} {zip}\n                <br />\n                {country}\n                {/* <br />\n                <span>{phone}</span> */}\n                <br />\n                <span>{email}</span>\n              </p>\n            </div>\n\n            {/* <div className=\"widget widget_tweets\">\n              <h4 className=\"widget-title\">Lorem Ipsum bla bla testing</h4>\n              <ul id=\"twitter\">\n                <li>\n                  <span>\n                    Lorem Ipsum. Proin gravida nibh vel velit auctor aliquet.\n                    Aenean sollicitudin, lorem quis bibendum auctor, nisi elit\n                    consequat ipsum\n                  </span>\n                  <b>\n                    <a href=\"#\">2 Days Ago</a>\n                  </b>\n                </li>\n                <li>\n                  <span>\n                    Lorem Ipsum. Proin gravida nibh vel velit auctor aliquet.\n                    Aenean sollicitudin, lorem quis bibendum auctor, nisi elit\n                    consequat ipsum\n                  </span>\n                  <b>\n                    <a href=\"#\">3 Days Ago</a>\n                  </b>\n                </li>\n              </ul>\n            </div> */}\n          </aside>\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default Contact;\n","import gql from \"graphql-tag\";\n\nexport const GET_PINNED_REPOS = gql`\n  {\n    viewer {\n      login\n      name\n      pinnedItems(types: REPOSITORY, first: 7) {\n        totalCount\n        nodes {\n          ... on Repository {\n            id\n            name\n            createdAt\n            description\n            resourcePath\n            url\n          }\n        }\n      }\n    }\n  }\n`;\n","import React from \"react\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport Loader from \"react-loader-spinner\";\nimport { get } from \"lodash\";\nimport { GET_PINNED_REPOS } from \"../queries\";\n\nimport projectImage from \"./test2.jpg\";\n\nlet Portfolio = () => {\n  const { data, loading } = useQuery(GET_PINNED_REPOS);\n  const pinnedItems = get(data, \"viewer.pinnedItems.nodes\", []);\n\n  return (\n    <section id=\"portfolio\">\n      <div className=\"row\">\n        <div className=\"twelve columns collapsed\">\n          <h1>Check Out Some of My Works.</h1>\n\n          {loading && (\n            <Loader type=\"Bars\" color=\"#00BFFF\" height={50} width={50} />\n          )}\n\n          <div\n            id=\"portfolio-wrapper\"\n            className=\"bgrid-quarters s-bgrid-thirds cf\"\n          >\n            {pinnedItems.map((project) => {\n              return (\n                <div key={project.name} className=\"columns portfolio-item\">\n                  <div className=\"item-wrap\">\n                    <a\n                      href={project.url}\n                      target=\"_blank\"\n                      rel=\"noopener noreferrer\"\n                      title={project.name}\n                    >\n                      <img alt={project.name} src={projectImage} />\n                      <div className=\"overlay\">\n                        <div className=\"portfolio-item-meta\">\n                          <h5>{project.title}</h5>\n                          <p>{project.description}</p>\n                        </div>\n                      </div>\n                      <div className=\"link-icon\">\n                        <i className=\"fa fa-link\"></i>\n                      </div>\n                    </a>\n                  </div>\n                </div>\n              );\n            })}\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default Portfolio;\n","import React, { Component } from \"react\";\nimport ReactGA from \"react-ga\";\nimport $ from \"jquery\";\nimport \"./App.css\";\nimport Header from \"./Components/Header\";\nimport Footer from \"./Components/Footer\";\nimport About from \"./Components/About\";\nimport Resume from \"./Components/Resume\";\nimport Contact from \"./Components/Contact\";\n// import Testimonials from \"./Components/Testimonials\";\nimport Portfolio from \"./Components/Portfolio\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      foo: \"bar\",\n      resumeData: {},\n    };\n\n    ReactGA.initialize(\"UA-110570651-1\");\n    ReactGA.pageview(window.location.pathname);\n  }\n\n  getResumeData() {\n    $.ajax({\n      url: \"/react-portfolio/resumeData.json\",\n      dataType: \"json\",\n      cache: false,\n      success: function (data) {\n        this.setState({ resumeData: data });\n      }.bind(this),\n      error: function (xhr, status, err) {\n        console.log(err);\n        alert(err);\n      },\n    });\n  }\n\n  componentDidMount() {\n    this.getResumeData();\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Header data={this.state.resumeData.main} />\n        <About data={this.state.resumeData.main} />\n        <Resume data={this.state.resumeData.resume} />\n        <Portfolio data={this.state.resumeData.portfolio} />\n        {/* <Testimonials data={this.state.resumeData.testimonials}/> */}\n        <Contact data={this.state.resumeData.main} />\n        <Footer data={this.state.resumeData.main} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import { ApolloClient } from \"apollo-client\";\nimport { createHttpLink } from \"apollo-link-http\";\nimport { setContext } from \"apollo-link-context\";\nimport { InMemoryCache } from \"apollo-cache-inmemory\";\n\nconst httpLink = createHttpLink({\n  uri: `https://api.github.com/graphql`,\n});\n\nconst authLink = setContext((_, { headers }) => {\n  return {\n    headers: {\n      ...headers,\n      authorization: `Bearer ${process.env.REACT_APP_API_SEC}`,\n    },\n  };\n});\n\nexport const client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n});\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { ApolloProvider } from \"@apollo/react-hooks\";\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nimport App from \"./App\";\nimport { client } from \"./config/ApolloClient\";\nimport registerServiceWorker from \"./registerServiceWorker\";\n\nlet Root = () => {\n  return (\n    <ApolloProvider client={client}>\n      <App />\n    </ApolloProvider>\n  );\n};\n\nReactDOM.render(<Root />, document.getElementById(\"root\"));\nregisterServiceWorker();\n"],"sourceRoot":""}